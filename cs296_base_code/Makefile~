.SUFFIXES: .cpp .hpp

# Programs
SHELL 	= bash
CC     	= g++
LD	= ld
RM 	= rm
ECHO	= /bin/echo
CAT	= cat
PRINTF	= printf
SED	= sed
DOXYGEN = doxygen
######################################
# Project Name (generate executable with this name)
TARGET = cs296_02_exe	

# Project Paths
PROJECT_ROOT=$(CURDIR)
EXTERNAL_ROOT=$(PROJECT_ROOT)/external
BOX2DPATH=$(EXTERNAL_ROOT)/src
SRCDIR = $(PROJECT_ROOT)/src
OBJDIR = $(PROJECT_ROOT)/myobjs
BINDIR = $(PROJECT_ROOT)/mybins
LIBDIR = $(PROJECT_ROOT)/mylibs
DOCDIR = $(PROJECT_ROOT)/doc
SCRIPTDIR = $(PROJECT_ROOT)/scripts
INSTALL_FOLDER = ../cs296_g02_project

# Library Paths
BOX2D_ROOT=$(EXTERNAL_ROOT)
GLUI_ROOT=/usr
GL_ROOT=/usr/include/

#Libraries
LIBS = -lBox2D -lglui -lglut -lGLU -lGL

# Compiler and Linker flags
CPPFLAGS =-g -O3 -Wall -fno-strict-aliasing -MMD -fPIC
CPPFLAGS+=-I $(BOX2D_ROOT)/include -I $(GLUI_ROOT)/include
LDFLAGS+=-L $(BOX2D_ROOT)/lib -L $(GLUI_ROOT)/lib
 
SHARED_LIB=TRUE

######################################

NO_COLOR=\e[0m
OK_COLOR=\e[1;32m
ERR_COLOR=\e[1;31m
WARN_COLOR=\e[1;33m
MESG_COLOR=\e[1;34m
FILE_COLOR=\e[1;37m

OK_STRING="[OK]"
ERR_STRING="[ERRORS]"
WARN_STRING="[WARNINGS]"
OK_FMT="${OK_COLOR}%30s\n${NO_COLOR}"
ERR_FMT="${ERR_COLOR}%30s\n${NO_COLOR}"
WARN_FMT="${WARN_COLOR}%30s\n${NO_COLOR}"
######################################

SRCS := $(wildcard $(SRCDIR)/*.cpp)
INCS := $(wildcard $(SRCDIR)/*.hpp)
OBJS := $(SRCS:$(SRCDIR)/%.cpp=$(OBJDIR)/%.o)


.PHONY: all setup doc clean distclean exe report html

exe: setup test1 $(BINDIR)/$(TARGET)

setup:
	@$(ECHO) "Setting up compilation..."
	@mkdir -p myobjs
	@mkdir -p mylibs
	@mkdir -p mybins



$(BINDIR)/$(TARGET): $(OBJS)
	@$(PRINTF) "$(MESG_COLOR)Building executable:$(NO_COLOR) $(FILE_COLOR) %16s$(NO_COLOR)" "$(notdir $@)"
	@$(CC) -Wall -pg -O3 -o $@ $(LDFLAGS) $(OBJS) $(LIBS) 2> temp.log || touch temp.err
	@if test -e temp.err; \
	then $(PRINTF) $(ERR_FMT) $(ERR_STRING) && $(CAT) temp.log; \
	elif test -s temp.log; \
	then $(PRINTF) $(WARN_FMT) $(WARN_STRING) && $(CAT) temp.log; \
	else $(PRINTF) $(OK_FMT) $(OK_STRING); \
	fi;
	@$(RM) -f temp.log temp.err

-include $(OBJS:.o=.d)	

test1:
	@test -f $(EXTERNAL_ROOT)/include/Box2D/Box2D.h || { echo "Installing Box2D" ; make test2 ; }

test2:
	@cd $(BOX2DPATH);	pwd;	rm -rf Box2D;	tar -xvzf Box2D.tgz;    patch $(PATCHFILE)/b2Timer.cpp $(PATCHPATH)/b2Timer_cpp.patch;  patch $(PATCHFILE)/b2Timer.h $(PATCHPATH)/b2Timer_h.patch;  cd Box2D;	mkdir -p build296;	cd build296;	cmake -DCMAKE_BUILD_TYPE=Release ../;	make;	make install;	cd ..;	cd ..;	cd ..;	cd ..
	@$(ECHO) "Box2D installed successfully"

$(OBJS): $(OBJDIR)/%.o : $(SRCDIR)/%.cpp
	@make test1
	@$(PRINTF) "$(MESG_COLOR)Compiling: $(NO_COLOR) $(FILE_COLOR) %25s$(NO_COLOR)" "$(notdir $<)"
	@$(CC) $(CPPFLAGS) -O3 -c $< -o $@ -MD 2> temp.log || touch temp.err
	@if test -e temp.err; \
	then $(PRINTF) $(ERR_FMT) $(ERR_STRING) && $(CAT) temp.log; \
	elif test -s temp.log; \
	then $(PRINTF) $(WARN_FMT) $(WARN_STRING) && $(CAT) temp.log; \
	else printf "${OK_COLOR}%30s\n${NO_COLOR}" "[OK]"; \
	fi;
	@$(RM) -f temp.log temp.err

doc:
	@$(ECHO) -n "Generating Doxygen Documentation ...  "
	@$(RM) -rf doc/html
	@$(DOXYGEN) $(DOCDIR)/Doxyfile 2 > /dev/null
	@$(ECHO) "Done"

report:
	@cd $(DOCDIR);convert *.eps *.jpg;latex cs296_report_02;bibtex cs296_report_02;latex cs296_report_02;latex cs296_report_02;dvipdf cs296_report_02.dvi;
	
clean:
	@$(ECHO) -n "Cleaning up..."
	@$(RM) -rf $(DOCDIR)/html/ $(DOCDIR)/*.pdf $(DOCDIR)/*.dvi $(DOCDIR)/*.log $(DOCDIR)/*.bbl $(DOCDIR)/*.blg $(DOCDIR)/*.aux $(DOCDIR)/*.jpg
	@$(RM) -rf $(PROJECT_ROOT)/my*
	@$(RM) -rf $(INSTALL_FOLDER)
	@$(ECHO) "Done"

install: setup exe doc report 
	@mkdir -p $(INSTALL_FOLDER)
	@mkdir -p $(INSTALL_FOLDER)/doc
	@mkdir -p $(INSTALL_FOLDER)/exe
	@cp $(BINDIR)/$(TARGET) $(INSTALL_FOLDER)/exe
	@cp $(DOCDIR)/*.pdf $(INSTALL_FOLDER)/doc
	@cp $(DOCDIR)/*.txt $(INSTALL_FOLDER)/

dist: distclean
	@cd ../; \
	tar -cvf cs296_g02_project.tar.gz $(PROJECT_ROOT)
	
distclean: clean
	@$(RM) -rf $(EXTERNAL_ROOT)/lib/* $(EXTERNAL_ROOT)/include/* $(EXTERNAL_ROOT)/src/Box2D
